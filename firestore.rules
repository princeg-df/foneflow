rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Function to get the user's role from the /users collection
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // Function to check if the user is an admin
    function isAdmin() {
      return getUserRole() == 'admin';
    }

    // USERS collection
    // Admins can read and write any user document.
    // Users can read their own document.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if isAdmin();
    }

    // ORDERS collection
    // Users can manage their own orders. Admins can manage any order.
    match /orders/{orderId} {
      // Allow read/delete if user is admin or the document's userId matches their own.
      allow read, delete: if isAdmin() || resource.data.userId == request.auth.uid;
      // Allow create if user is admin or they are setting their own userId.
      allow create: if isAdmin() || request.resource.data.userId == request.auth.uid;
      // Allow update if user is admin or they are updating their own document.
      allow update: if isAdmin() || resource.data.userId == request.auth.uid;
    }
    
    // Allow users to list their own orders, and admins to list all orders
    match /orders/{document=**} {
        allow list: if isAdmin() || (request.query.limit > 0 && request.query.filters[0].value == request.auth.uid);
    }

    // CARDS collection
    // Users can manage their own cards. Admins can manage any card.
    match /cards/{cardId} {
      allow read, delete: if isAdmin() || resource.data.userId == request.auth.uid;
      allow create: if isAdmin() || request.resource.data.userId == request.auth.uid;
      allow update: if isAdmin() || resource.data.userId == request.auth.uid;
    }

    // Allow users to list their own cards, and admins to list all cards
    match /cards/{document=**} {
        allow list: if isAdmin() || (request.query.limit > 0 && request.query.filters[0].value == request.auth.uid);
    }

    // TRANSACTIONS collection
    // Users can manage their own transactions. Admins can manage any transaction.
    match /transactions/{transactionId} {
      allow read, delete: if isAdmin() || resource.data.userId == request.auth.uid;
      allow create: if isAdmin() || request.resource.data.userId == request.auth.uid;
      allow update: if isAdmin() || resource.data.userId == request.auth.uid;
    }

    // Allow users to list their own transactions, and admins to list all transactions
    match /transactions/{document=**} {
        allow list: if isAdmin() || (request.query.limit > 0 && request.query.filters[0].value == request.auth.uid);
    }
  }
}