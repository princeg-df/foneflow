rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read the full user list.
      // Any authenticated user can read their own user profile.
      allow read: if request.auth != null && (isAdmin(request.auth.uid) || request.auth.uid == userId);

      // Admins can create new users.
      // An authenticated user can update their own document, but cannot change their role.
      allow write: if request.auth != null && isAdmin(request.auth.uid);
      allow update: if request.auth != null && request.auth.uid == userId && request.resource.data.role == resource.data.role;
    }

    // Rules for collections that contain user-specific data
    match /{collection}/{docId} where collection in ['orders', 'cards', 'transactions'] {
      // Allow read, create, update, delete only if the document's userId matches the authenticated user's ID,
      // OR if the authenticated user is an admin.
      allow read, write: if request.auth != null && (request.auth.uid == resource.data.userId || isAdmin(request.auth.uid));
    }
  }
}